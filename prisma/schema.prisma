generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model attitudes {
  attitude_description String @id @db.VarChar(255)
}

model faction {
  faction_id         Int                  @id @default(autoincrement())
  faction_name       String               @db.VarChar(255)
  faction_goals      String?              @db.Text
  faction_type       String?              @db.VarChar(255)
  leader             Int?
  sentient           sentient?            @relation(fields: [leader], references: [sentient_id], onDelete: NoAction, onUpdate: NoAction, map: "faction_ibfk_1")
  faction_membership faction_membership[]

  @@index([leader], map: "leader")
}

model faction_membership {
  sentient_id           Int
  faction_id            Int
  faction_membership_id Int      @id @default(autoincrement())
  sentient              sentient @relation(fields: [sentient_id], references: [sentient_id], onDelete: NoAction, onUpdate: NoAction, map: "faction_membership_ibfk_1")
  faction               faction  @relation(fields: [faction_id], references: [faction_id], onDelete: NoAction, onUpdate: NoAction, map: "faction_membership_ibfk_2")

  @@index([faction_id], map: "faction_id")
  @@index([sentient_id], map: "sentient_id")
}

model location {
  location_id          Int                      @id @default(autoincrement())
  location_scale       location_location_scale?
  part_of              Int?
  location_description String?                  @db.Text
  location             location?                @relation("locationTolocation", fields: [part_of], references: [location_id], onDelete: NoAction, onUpdate: NoAction, map: "location_ibfk_1")
  other_location       location[]               @relation("locationTolocation")

  @@index([part_of], map: "part_of")
}

model sentient {
  sentient_id        Int                  @id @default(autoincrement())
  first_name         String               @db.VarChar(255)
  last_name          String?              @db.TinyText
  birth_date         DateTime?            @db.Date
  heroes_team_name   String?              @db.VarChar(255)
  race_name          String               @db.VarChar(255)
  short_title        String?              @db.VarChar(255)
  state              sentient_state?
  property_of        Int?                 @default(0)
  faction            faction[]
  faction_membership faction_membership[]
  user               user?                @relation(fields: [property_of], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_property_of_user")

  @@index([property_of], map: "fk_property_of_user")
}

model user {
  user_id       Int            @id @default(autoincrement())
  user_name     String         @db.VarChar(31)
  user_role     user_user_role
  user_password String?        @db.VarChar(32)
  sentient      sentient[]
}

enum location_location_scale {
  World
  Continent
  Kingdom
  Province
  Area
}

enum user_user_role {
  Game_Master @map("Game Master")
  Player
}

enum sentient_state {
  alive
  dead
  undead
  missing
}
